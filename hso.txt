import requests
import time
import json
import threading
from concurrent.futures import ThreadPoolExecutor
# إعدادات الطلب
BASE_URL = "https://www.instagram.com/api/v1/friendships/{user_id}/followers/"
USER_ID = "71633189810"  # استبدل بـ ID الحساب المطلوب
HEADERS = {
    'User-Agent': "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Mobile Safari/537.36",
  'sec-ch-ua': "\"Not A(Brand\";v=\"8\", \"Chromium\";v=\"132\"",
  'sec-ch-ua-model': "\"RMX3941\"",
  'x-ig-www-claim': "hmac.AR0uuKHDvVcHh3Jxe3VHOC7fPxjCYKrVnye9cqS2P08etAI8",
  'x-web-session-id': "fa349a:9i1e3x:makmpw",
  'x-ig-app-id': "1217981644879628",
  'sec-ch-ua-mobile': "?1",
  'sec-ch-ua-platform-version': "\"14.0.0\"",
  'x-requested-with': "XMLHttpRequest",
  'x-asbd-id': "129477",
  'sec-ch-ua-full-version-list': "\"Not A(Brand\";v=\"8.0.0.0\", \"Chromium\";v=\"132.0.6961.0\"",
  'sec-ch-prefers-color-scheme': "dark",
  'x-csrftoken': "loRryvu8mfFMXIQ4lE2qXyzFZC0IVK1j",
  'sec-ch-ua-platform': "\"Android\"",
  'sec-fetch-site': "same-origin",
  'sec-fetch-mode': "cors",
  'sec-fetch-dest': "empty",
  'referer': "https://www.instagram.com/mafeseall/followers/",
  'accept-language': "en-IQ,en;q=0.9,ar-IQ;q=0.8,ar;q=0.7,en-GB;q=0.6,en-US;q=0.5",
  'Cookie':cookie
}
MAX_THREADS = 5  # عدد الـ Threads
followers = []  # قائمة المتابعين
lock = threading.Lock()  # قفل لتجنب مشاكل التزامن

def fetch_followers(next_max_id=None):
    """ دالة لجلب المتابعين باستخدام Pagination """
    url = BASE_URL.format(user_id=USER_ID)
    params = {'count': "12", 'search_surface': "follow_list_page"}
    if next_max_id:
        params['max_id'] = next_max_id

    response = requests.get(url, params=params, headers=HEADERS)
   # print(response.text)

    if response.status_code == 200:
        data = response.json()
        users = data.get('users', [])
        next_max_id = data.get('next_max_id')
        
        with lock:
            followers.extend([user['pk'] for user in users])

        return next_max_id
    else:
        print(f"فشل الطلب: {response.status_code}")
        return None

def threaded_fetch():
    """ تشغيل الطلبات باستخدام ThreadPoolExecutor """
    next_max_id = None
    with ThreadPoolExecutor(max_workers=30) as executor:
        while True:
            future = executor.submit(fetch_followers, next_max_id)
            next_max_id = future.result()
            
            if not next_max_id:
                print('t')
                break

            #time.sleep(2)  # تأخير لتجنب الحظر

if __name__ == "__main__":
    threaded_fetch()
    print(f"تم جلب {len(followers)} متابعًا.")
    print(followers)
